services:

  psql:
    image: postgres:17.4
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./psql/data:/var/lib/postgresql/data
    networks:
      - appnet

  redis:
    image: redis:7.4.2-alpine
    restart: unless-stopped
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    volumes:
      - ./redis/data:/data
    networks:
      - appnet

  back:
    image: back:1.2.1
    build:
      context: ./backend-service
    env_file:
      - ./backend-service/.env
    restart: unless-stopped
    ports:
      - "8080:8080"
    healthcheck:
      test: |
        wget -qO- http://localhost:8080/healthz && \
        wget -qO- http://localhost:8080/readyz || exit 1
      interval: 10s
      timeout: 5s
      retries: 2
      start_period: 5s
    networks:
      - appnet
    depends_on:
      - psql
      - redis

  front:
    image: front:1.3.0
    build:
      context: ./frontend-service
      args:
        # NEXT_PUBLIC_BACKEND_URL: http://10.56.6.82:8080
        NEXT_PUBLIC_BACKEND_URL: http://slurm-talks-back.s074495.edu.slurm.io
    restart: unless-stopped
    ports:
      - "3000:3000"
    healthcheck:
      test: |
        wget -qO- http://localhost:3000/healthz && \
        wget -qO- http://localhost:3000/readyz || exit 1
      interval: 10s
      timeout: 5s
      retries: 2
      start_period: 5s
    networks:
      - appnet
    depends_on:
      back:
        condition: service_healthy

networks:
  appnet:
